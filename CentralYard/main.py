import telebot
from telebot import types
import pandas as pd
from io import BytesIO
import requests
from price import price_grandmaster, price_master
from barber_info import Kozachuk_Andriy, Munno_Nikola, Sergiy_Zaika, Viktor_Kozlovskyi, Artem_Scherban, \
    Dmytro_Zhurovets, Denis_Isaenko
from appointment import book_staff, book_dates

token = '6979055272:AAHVUQ6wQbrlQuwd8Z5v1GuFy3IIF7Pb6lk'
bot = telebot.TeleBot(token)


@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, f'–î–æ–±—Ä–æ–≥–æ –¥–Ω—è, {message.from_user.first_name}!\n'
                                      f'–ó–ª—ñ–≤–∞ –∑–Ω–∏–∑—É –º–æ–∂–µ—Ç–µ –ø–æ–±–∞—á–∏—Ç–∏ –º–µ–Ω—é –∑ —É—Å—ñ–º–∞ –∫–æ–º–∞–Ω–¥–∞–º–∏\n‚¨áÔ∏è')


@bot.message_handler(commands=['price'])
def price(message):
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    button = types.InlineKeyboardButton("–í–∞—Ä—Ç—ñ—Å—Ç—å —Å—Ç—Ä–∏–∂–∫–∏ C—Ç–∞—Ä—à–æ–≥—É –ú–∞–π—Å—Ç—Ä—É", callback_data='price_grandmaster')
    button_2 = types.InlineKeyboardButton("–í–∞—Ä—Ç—ñ—Å—Ç—å —Å—Ç—Ä–∏–∂–∫–∏ –ú–∞–π—Å—Ç—Ä—É", callback_data='price_master')
    keyboard.add(button, button_2)
    bot.send_message(message.chat.id, "–î—ñ–∑–Ω–∞—Ç–∏—Å—å –≤–∞—Ä—Ç—ñ—Å—Ç—åüíµ\n\n<u><b>–°—Ç–∞—Ä—à–∏–π –ú–∞—Å—Ç–µ—Ä:</b></u>\n–ú—É–Ω–Ω–æ –ù—ñ–∫–æ–ª–∞\n"
                                      "–ö–æ–∑–ª–æ–≤—Å—å–∫–∏–π –í—ñ–∫—Ç–æ—Ä\n–ê—Ä—Ç–µ–º –©–µ—Ä–±–∞–Ω—å\n–°–µ—Ä–≥—ñ–π –ó–∞—ó–∫–∞\n–ö–æ–∑–∞—á—É–∫ –ê–Ω–¥—Ä—ñ–π"
                                      "\n\n<u><b>–ú–∞–π—Å—Ç–µ—Ä</b></u>:\n–î–µ–Ω–∏—Å –Ü—Å–∞—î–Ω–∫–æ\n–î–º–∏—Ç—Ä–æ –ñ–∏—Ä–æ–≤–µ—Ü—å\n\n"
                                      "–í–∏ –º–æ–∂–µ—Ç–µ –ø–æ–¥–∏–≤–∏—Ç–∏—Å—å –±—ñ–ª—å—à –¥–µ–ª–∞—Ç–∞–ª—å–Ω—É \n—ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –±–∞—Ä–±–µ—Ä—ñ–≤ —É –º–µ–Ω—é \n"
                                      "–∫–æ–º–∞–Ω–¥ '–Ü–Ω—Ñ–æ–º–∞—Ä—Ü—ñ—è –ø—Ä–æ –±–∞—Ä–±–µ—Ä–∞' \n–∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å - /barber_info",
                     reply_markup=keyboard, parse_mode='HTML')


@bot.message_handler(commands=['barber_info'])
def barber_info(message):
    photo_1 = open('photo/–ö–æ–∑–∞—á—É–∫ + –ú—É–Ω–Ω–æ.jpg', 'rb')
    bot.send_photo(message.chat.id, photo_1)
    keyboard_1 = types.InlineKeyboardMarkup(row_width=2)
    button = types.InlineKeyboardButton("–ö–æ–∑–∞—á—É–∫ –ê–Ω–¥—Ä—ñ–π", callback_data='Kozachuk_Andriy')
    button_2 = types.InlineKeyboardButton("–ú—É–Ω–Ω–æ –ù—ñ–∫–æ–ª–∞", callback_data='Munno_Nikola')
    keyboard_1.add(button, button_2)
    bot.send_message(message.chat.id, "–°—Ç–∞—Ä—à–∏–π –º–∞–π—Å—Ç–µ—Ä:", reply_markup=keyboard_1)

    photo_2 = open('photo/–ó–∞—ó–∫–∞ + –ö–æ–∑–ª–æ–≤—Å–∫–∏–π .jpg', 'rb')
    bot.send_photo(message.chat.id, photo_2)
    keyboard_2 = types.InlineKeyboardMarkup(row_width=2)
    button_3 = types.InlineKeyboardButton("–ó–∞—ó–∫–∞ C–µ—Ä–≥—ñ–π", callback_data='Sergiy_Zaika')
    button_4 = types.InlineKeyboardButton("–ö–æ–∑–ª–æ–≤—Å—å–∫–∏–π –í—ñ–∫—Ç–æ—Ä", callback_data='Viktor_Kozlovskyi')
    keyboard_2.add(button_3, button_4)
    bot.send_message(message.chat.id, "–°—Ç–∞—Ä—à–∏–π –º–∞–π—Å—Ç–µ—Ä:", reply_markup=keyboard_2)

    photo_3 = open('photo/–©–µ—Ä–±–∞–Ω—å.jpg', 'rb')
    bot.send_photo(message.chat.id, photo_3)
    keyboard_3 = types.InlineKeyboardMarkup(row_width=2)
    button_6 = types.InlineKeyboardButton("–ê—Ä—Ç–µ–º –©–µ—Ä–±–∞–Ω—å", callback_data='Artem_Scherban')
    keyboard_3.add(button_6)
    bot.send_message(message.chat.id, "–°—Ç–∞—Ä—à–∏–π –º–∞–π—Å—Ç–µ—Ä:", reply_markup=keyboard_3)

    photo_4 = open('photo/–ñ—É—Ä–æ–≤–µ—Ü—å + –Ü—Å–∞—î–Ω–∫–æ.jpg', 'rb')
    bot.send_photo(message.chat.id, photo_4)
    keyboard_4 = types.InlineKeyboardMarkup(row_width=2)
    button_7 = types.InlineKeyboardButton("–î–º–∏—Ç—Ä–æ –ñ–∏—Ä–æ–≤–µ—Ü—å", callback_data='Dmytro_Zhurovets')
    button_8 = types.InlineKeyboardButton("–î–µ–Ω–∏—Å –Ü—Å–∞—î–Ω–∫–æ", callback_data='Denis_Isaenko')
    keyboard_4.add(button_7, button_8)
    bot.send_message(message.chat.id, "–ú–∞–π—Å—Ç–µ—Ä:", reply_markup=keyboard_4)


@bot.message_handler(commands=['appointment'])
def make_appointment(message):
    staff_list = book_staff()
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    buttons = [types.InlineKeyboardButton(name, callback_data=f'staff_id_{staff_id}') for name, staff_id in
               staff_list.items()]
    keyboard.add(*buttons)

    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞", reply_markup=keyboard)

    bot.register_next_step_handler(message, handle_chosen_staff)


@bot.callback_query_handler(func=lambda call: call.data.startswith('staff_id_'))
def handle_chosen_staff(call):
    staff_list = book_staff()
    staff_id = call.data.split('_')[-1]
    chosen_staff = next((name for name, id_ in staff_list.items() if id_ == int(staff_id)), None)
    bot.send_message(call.message.chat.id, f"–í—ã–±—Ä–∞–Ω —Å–æ—Ç—Ä—É–¥–Ω–∏–∫: {chosen_staff}, ID: {staff_id}")
    booking_dates(call, staff_id)


def booking_dates(call, staff_id):
    booking_date = book_dates()
    keyboard = types.InlineKeyboardMarkup(row_width=3)
    buttons = [
        types.InlineKeyboardButton(date, callback_data=f"date_{date}") for date in booking_date
    ]

    keyboard.add(*buttons)
    bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É", reply_markup=keyboard)
    bot.register_next_step_handler(call, handle_booking_dates, staff_id)


@bot.callback_query_handler(func=lambda call: call.data.startswith('date_'))
def handle_booking_dates(call, staff_id):
    selected_date = call.data.split('_')[-1]  # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É –∏–∑ callback_data

    bot.send_message(call.message.chat_id, f"–í—ã–±—Ä–∞–Ω–Ω–∞—è –¥–∞—Ç–∞: {selected_date}")







@bot.message_handler(commands=['contact'])
def contact(message):
    bot.send_message(message.chat.id, "–®–∞–Ω–æ–≤–Ω–∏–π –∫–ª—ñ—î–Ω—Ç!\n–ú–∏ –∑–Ω–∞—Ö–æ–¥–∏–º–æ—Å—å –∑–∞ –∞–¥—Ä–µ—Å–æ—é: –º.–ö–∏–á–≤, –≤—É–ª.–•—Ä–µ—â–∞—Ç–∏–∫ "
                                      "46–ë\n\n–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: +38 (068) 46-46-46-0\n\n"
                                      "–ì–µ–æ–ª–æ–∫–∞—Ü—ñ—è: https://maps.app.goo.gl/kWHjA4NDz7Y3kfJz6")


@bot.message_handler(commands=['social_media'])
def social_media(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏—î–¥–Ω—É–π—Å—è –¥–æ –Ω–∞—à–∏—Ö —Å–æ—Ü—ñ–∞–ª—å–Ω–∏—Ö –º–µ—Ä–µ–∂ —Ç–∞ —Å–ª—ñ–¥–∫—É–π –∑–∞ –Ω–æ–≤–∏–Ω–∞–º–∏, "
                                      "—Ç—Ä–µ–Ω–¥–∞–º–∏ —Ç–∞ —Ü—ñ–∫–∞–≤–∏–º–∏ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è–º–∏ –≤—ñ–¥ –Ω–∞—à–∏—Ö —Ö–ª–æ–ø—Ü—ñ–≤ #centralyard\n\n<u><b>–ù–∞—à "
                                      "Website:</b></u> https://centralyard.com.ua/\n\n<u><b>–ù–∞—à Instagram:</b></u> "
                                      "https://www.instagram.com/central.yard46/\n\n<u><b>–ù–∞—à TikTok:</b></u> "
                                      "https://www.tiktok.com/@centralyardbarber\n\n–®–≤–∏–¥—à–µ –¥–æ–ª—É—á–∞–π—Å—è "
                                      "—Ç–∞ –æ—Ç—Ä–∏–º—É–π –º–∞–∫—Å–∏–º—É–º –∑–∞–¥–æ–≤–æ–ª–µ–Ω–Ω—è –≤—ñ–¥ –Ω–∞—à–∏—Ö —Ç–∞–ª–∞–Ω–æ–≤–∏—Ç–∏—Ö –±–∞—Ä–±–µ—Ä—ñ–≤",
                     parse_mode='HTML')


@bot.callback_query_handler(func=lambda call: call.data.startswith('grand_master_price_'))
def handle_price_grandmaster(call):
    index = int(call.data.split('_')[-1])
    excel_link = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vRn9BG_Jqr6ouernSlnZGlKbV3159ZChYI_d_' \
                 'MlK-P0EkWVMxW5q-J5deHY5V-y3hQ-7_9DoGgLByLE/pub?output=xlsx'
    sheet_name = 'Grandmaster'
    response = requests.get(excel_link)
    excel_data = response.content
    df = pd.read_excel(BytesIO(excel_data), sheet_name=sheet_name)
    if index < len(df):
        row = df.iloc[index]
        haircut = row['–°—Ç—Ä–∏–∂–∫–∞']
        price = row['–¶—ñ–Ω–∞']
        worktime = row['–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å']
        bot.send_message(call.message.chat.id, f"<u><b>–í–∏ –æ–±—Ä–∞–ª–∏:</b></u> {haircut}\n<u><b>–í–∞—Ä—Ç—ñ—Å—å —Å–∫–ª–∞–¥–∞—î:</b></u> "
                                               f"{price} –≥—Ä–Ω.\n<u><b>–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å —Å—Ç—Ä–∏–∂–∫–∏:</b></u> "
                                               f"{worktime}", parse_mode='HTML')
    else:
        bot.send_message(call.message.chat.id, "–ü–æ–º–∏–ª–∫–∞: –ù–µ–º–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –¥–ª—è —Ü—å–æ–≥–æ —ñ–Ω–¥–µ–∫—Å—É")


@bot.callback_query_handler(func=lambda call: call.data.startswith('master_price_'))
def handle_price_grandmaster(call):
    index = int(call.data.split('_')[-1])
    excel_link = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vRn9BG_Jqr6ouernSlnZGlKbV3159ZChYI_d_' \
                 'MlK-P0EkWVMxW5q-J5deHY5V-y3hQ-7_9DoGgLByLE/pub?output=xlsx'
    sheet_name = 'Master'
    response = requests.get(excel_link)
    excel_data = response.content
    df = pd.read_excel(BytesIO(excel_data), sheet_name=sheet_name)
    if index < len(df):
        row = df.iloc[index]
        haircut = row['–°—Ç—Ä–∏–∂–∫–∞']
        price = row['–¶—ñ–Ω–∞']
        worktime = row['–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å']
        bot.send_message(call.message.chat.id, f"<u><b>–í–∏ –æ–±—Ä–∞–ª–∏:</b></u> {haircut}\n<u><b>–í–∞—Ä—Ç—ñ—Å—å —Å–∫–ª–∞–¥–∞—î:</b></u> "
                                               f"{price} –≥—Ä–Ω.\n<u><b>–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å —Å—Ç—Ä–∏–∂–∫–∏:</b></u> "
                                               f"{worktime}", parse_mode='HTML')
    else:
        bot.send_message(call.message.chat.id, "–ü–æ–º–∏–ª–∫–∞: –ù–µ–º–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –¥–ª—è —Ü—å–æ–≥–æ —ñ–Ω–¥–µ–∫—Å—É")


functions = {
    'price_grandmaster': price_grandmaster,
    'price_master': price_master,
    'Kozachuk_Andriy': Kozachuk_Andriy,
    'Munno_Nikola': Munno_Nikola,
    'Sergiy_Zaika': Sergiy_Zaika,
    'Viktor_Kozlovskyi': Viktor_Kozlovskyi,
    'Artem_Scherban': Artem_Scherban,
    'Dmytro_Zhurovets': Dmytro_Zhurovets,
    'Denis_Isaenko': Denis_Isaenko,
    'barber_info': barber_info
}


@bot.callback_query_handler(func=lambda call: True)
def handle_action(call):
    if call.data in functions:
        function_to_run = functions[call.data]
        function_to_run(call)


bot.polling(none_stop=True, interval=0)